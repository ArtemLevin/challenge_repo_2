services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:5000"
    env_file:
      - .env
    environment:
      PYTHONPATH: /app
    depends_on:
      - message-broker
      - cache
      - dlq-cache
      - tracing
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3


  message-broker:
    image: bitnami/kafka:latest
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes

      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://message-broker:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_PROCESS_ROLES=broker
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    networks:
      - internal-network

  cache:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - internal-network

  dlq-cache:
    image: redis:latest
    ports:
      - "6380:6379"
    networks:
      - internal-network

  tracing:
    image: jaegertracing/all-in-one:latest
    ports:
      - "14268:14268"
      - "16686:16686"
    networks:
      - internal-network

networks:
  internal-network:
    driver: bridge